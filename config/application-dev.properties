# ===================================================================
# APPLICATION PROPERTIES
# ===================================================================
spring.main.banner-mode=off

# ===================================================================
# LOG PROPERTIES
# ===================================================================
# GENERAL PROPERTIES
logging.pattern.level='[%X{data}%thread] [%X{X-B3-TraceId:-}] - %5p'
logging.pattern.console=%p, %d{'yyyy-MM-dd HH:mm:ss,SSS',America/Mexico_City}, %C{1}:%M:%L, %X{mdc.uuid}, %m%n%ex{3}

# LOG LEVELS
logging.level.com.sdw.library=DEBUG
logging.level.org.springframework.data=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===================================================================
# URL ENDPOINTS
# ===================================================================
api.uri.basePath=/api
api.interceptorPath=${api.uri.basePath}/**

#API DOMAINS
api.uri.books.domain=/books
api.uri.publisher.domain=/publishers
api.uri.categories.domain=/categories
api.uri.authors.domain=/authors

#VERSIONS BOOKS
api.uri.books.retrieve.version=/private/v1
api.uri.books.save.version=/private/v1
api.uri.books.update.version=/private/v1
api.uri.books.delete.version=/private/v1

#VERSIONS PUBLISHERS
api.uri.publisher.retrieve.version=/private/v1
api.uri.publisher.save.version=/private/v1
api.uri.publisher.update.version=/private/v1
api.uri.publisher.delete.version=/private/v1

#VERSIONS CATEGORIES
api.uri.categories.retrieve.version=/private/v1
api.uri.categories.save.version=/private/v1
api.uri.categories.update.version=/private/v1
api.uri.categories.delete.version=/private/v1

#VERSIONS AUTHORS
api.uri.authors.retrieve.version=/private/v1
api.uri.authors.save.version=/private/v1
api.uri.authors.update.version=/private/v1
api.uri.authors.delete.version=/private/v1

#URI BOOKS RESOURCE
api.uri.books.retrieve.resource=${api.uri.books.domain}
api.uri.books.save.resource=${api.uri.books.domain}
api.uri.books.update.resource=${api.uri.books.domain}/{id}
api.uri.books.delete.resource=${api.uri.books.domain}/{id}

#URI PUBLISHERS RESOURCE
api.uri.publisher.retrieve.resource=${api.uri.publisher.domain}
api.uri.publisher.save.resource=${api.uri.publisher.domain}
api.uri.publisher.update.resource=${api.uri.publisher.domain}/{id}
api.uri.publisher.delete.resource=${api.uri.publisher.domain}/{id}

#URI CATEGORIES RESOURCE
api.uri.categories.retrieve.resource=${api.uri.categories.domain}
api.uri.categories.save.resource=${api.uri.categories.domain}
api.uri.categories.update.resource=${api.uri.categories.domain}/{id}
api.uri.categories.delete.resource=${api.uri.categories.domain}/{id}

#URI AUTHORS RESOURCE
api.uri.authors.retrieve.resource=${api.uri.authors.domain}
api.uri.authors.save.resource=${api.uri.authors.domain}
api.uri.authors.update.resource=${api.uri.authors.domain}/{id}
api.uri.authors.delete.resource=${api.uri.authors.domain}/{id}

#URI BOOKS MAPPING
api.uri.books.retrieve.mapping=${api.uri.books.retrieve.version}${api.uri.books.retrieve.resource}
api.uri.books.save.mapping=${api.uri.books.save.version}${api.uri.books.save.resource}
api.uri.books.update.mapping=${api.uri.books.update.version}${api.uri.books.update.resource}

#URI PUBLISHERS MAPPING
api.uri.publisher.retrieve.mapping=${api.uri.publisher.retrieve.version}${api.uri.publisher.retrieve.resource}
api.uri.publisher.save.mapping=${api.uri.publisher.save.version}${api.uri.publisher.save.resource}
api.uri.publisher.update.mapping=${api.uri.publisher.update.version}${api.uri.publisher.update.resource}

#URI CATEGORIES MAPPING
api.uri.categories.retrieve.mapping=${api.uri.categories.retrieve.version}${api.uri.categories.retrieve.resource}
api.uri.categories.save.mapping=${api.uri.categories.save.version}${api.uri.categories.save.resource}
api.uri.categories.update.mapping=${api.uri.categories.update.version}${api.uri.categories.update.resource}

#URI AUTHORS MAPPING
api.uri.authors.retrieve.mapping=${api.uri.authors.retrieve.version}${api.uri.authors.retrieve.resource}
api.uri.authors.save.mapping=${api.uri.authors.save.version}${api.uri.authors.save.resource}
api.uri.authors.update.mapping=${api.uri.authors.update.version}${api.uri.authors.update.resource}

# ===================================================================
# SWAGGER PROPERTIES
# ===================================================================
swagger.basePackage=com.sdw.library
swagger.title=Gesti\u00F3n y administraci\u00F3n de Librerias
swagger.descriptionApi=BOOKSHOP'S API
swagger.version=@project.version@
swagger.nameDeveloper=Felipe Monz\u00F3n
swagger.contactUrl=
swagger.emailDeveloper=felipemonzon2705@gmail.com

# ===================================================================
# DATABASE CONNECTION.
# ===================================================================
#DEVELOP
spring.datasource.url=jdbc:postgresql://localhost:5432/library
spring.datasource.username=postgres
spring.datasource.password=As123456

# ===================================================================
# JPA CONFIGURATION.
# ===================================================================
spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
